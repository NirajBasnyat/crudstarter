<?php

namespace App\Http\Controllers;

use Illuminate\View\View;
use Illuminate\Http\Request;
use App\Models\{{modelName}};
use Illuminate\Http\RedirectResponse;
use App\Http\Requests\{{modelName}}StoreRequest;
use App\Http\Requests\{{modelName}}UpdateRequest;
{{statusChangeTraitImport}}

class {{modelName}}Controller extends Controller
{
    {{statusChangeTrait}}
    public function index(): View
    {
        return view('{{modelNameSingularLowerCase}}.index', [
            '{{modelNamePluralLowerCase}}' => {{modelName}}::query()->select({{fieldsForSelect}})->latest()->get()
        ]);
    }

    public function create(): View
    {
        return view('{{modelNameSingularLowerCase}}.create'{{createMethodCode}}
    }

    public function store({{modelName}}StoreRequest $request): RedirectResponse
    {
        {{storeMethodCode}}

        return redirect()->route('{{modelNamePluralKebabCase}}.index')->with('success', '{{modelName}} Created Successfully!');
    }

    public function show({{modelName}} ${{modelNameSingularLowerCase}}): View
    {
        return view('{{modelNameSingularLowerCase}}.show', compact('{{modelNameSingularLowerCase}}'));
    }

    public function edit({{modelName}} ${{modelNameSingularLowerCase}}): View
    {
        return view('{{modelNameSingularLowerCase}}.edit', {{editMethodCode}}
    }

    public function update({{modelName}}UpdateRequest $request, {{modelName}} ${{modelNameSingularLowerCase}}): RedirectResponse
    {
        {{updateMethodCode}}

        return redirect()->route('{{modelNamePluralKebabCase}}.index')->with('success', '{{modelName}} Updated Successfully!');
    }

    public function destroy({{modelName}} ${{modelNameSingularLowerCase}}): RedirectResponse
    {
        {{deleteMethodCode}}

        ${{modelNameSingularLowerCase}}->delete();

        return redirect()->route('{{modelNamePluralKebabCase}}.index')->with('error', '{{modelName}} Deleted Successfully!');
    }

    {{statusChangeMethodCode}}
}
